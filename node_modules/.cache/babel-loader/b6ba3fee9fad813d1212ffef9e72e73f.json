{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tomegavazov/WebstormProjects/Lab-2-frontend/src/components/Books/BookEdit/bookEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst BookEdit = props => {\n  _s();\n\n  const history = useHistory();\n  const [formData, updateFormData] = React.useState({\n    name: \"\",\n    category: \"\",\n    authorId: 0,\n    availableCopies: 0\n  });\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n    console.log(e.target.name);\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const name = formData.name !== \"\" ? formData.name : props.book.name;\n    const category = formData.category !== '' ? formData.category : props.book.category;\n    const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\n    const authorId = formData.authorId !== 0 ? formData.authorId : props.book.author.id;\n    console.log(availableCopies);\n    props.onEditBook(props.book.id, name, category, authorId, availableCopies);\n    console.log(props.book.id, name, category, authorId, availableCopies);\n    history.push(\"/books\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-5\",\n    children: [console.log(\"edit\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Book name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: props.book.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"availableCopies\",\n            children: \"Available Copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"availableCopies\",\n            name: \"availableCopies\",\n            placeholder: props.book.availableCopies,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.categories.map(term => {\n              if (props.book.category !== undefined && props.book.category === term) return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.book.category,\n                value: term,\n                children: term\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 44\n              }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term,\n                children: term\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"authorId\",\n            className: \"form-control\",\n            onChange: handleChange,\n            children: props.authors.map(term => {\n              if (props.book.author !== undefined && props.book.author.id === term.id) return /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: props.book.author.id,\n                value: term.id,\n                children: term.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 44\n              }, this);else return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: term.id,\n                children: term.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookEdit, \"xVmOb/j8vR9zE8BbgcKPcuv3kJs=\", false, function () {\n  return [useHistory];\n});\n\n_c = BookEdit;\nexport default BookEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookEdit\");","map":{"version":3,"sources":["/Users/tomegavazov/WebstormProjects/Lab-2-frontend/src/components/Books/BookEdit/bookEdit.js"],"names":["React","useHistory","BookEdit","props","history","formData","updateFormData","useState","name","category","authorId","availableCopies","handleChange","e","target","value","trim","console","log","onFormSubmit","preventDefault","book","author","id","onEditBook","push","categories","map","term","undefined","authors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nconst BookEdit = (props) => {\n\n    const history = useHistory();\n    const [formData, updateFormData] = React.useState({\n        name: \"\",\n        category: \"\",\n        authorId: 0,\n        availableCopies: 0\n    })\n\n    const handleChange = (e) => {\n        updateFormData({\n            ...formData,\n            [e.target.name]: e.target.value.trim()\n        })\n        console.log(e.target.name)\n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        const name = formData.name !== \"\" ? formData.name : props.book.name;\n        const category = formData.category !== '' ? formData.category : props.book.category\n        const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies\n        const authorId = formData.authorId !== 0 ? formData.authorId : props.book.author.id;\n\n        console.log(availableCopies)\n        props.onEditBook(props.book.id, name, category, authorId, availableCopies);\n        console.log(props.book.id, name, category, authorId, availableCopies)\n        history.push(\"/books\");\n    }\n\n    return(\n        <div className=\"row mt-5\">\n            {console.log(\"edit\")}\n            <div className=\"col-md-5\">\n                <form onSubmit={onFormSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Book name</label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               id=\"name\"\n                               name=\"name\"\n                               placeholder={props.book.name}\n                               onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"availableCopies\">Available Copies</label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               id=\"availableCopies\"\n                               name=\"availableCopies\"\n                               placeholder={props.book.availableCopies}\n                               onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Category</label>\n                        <select name=\"category\" className=\"form-control\" onChange={handleChange}>\n                            {props.categories.map((term) => {\n                                if(props.book.category !== undefined && props.book.category === term)\n                                    return <option selected={props.book.category} value={term}>{term}</option>\n                                else return <option value={term}>{term}</option>\n                            })}\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Author</label>\n                        <select name=\"authorId\" className=\"form-control\" onChange={handleChange}>\n                            {props.authors.map((term) => {\n                                if(props.book.author !== undefined &&\n                                    props.book.author.id === term.id)\n                                    return <option selected={props.book.author.id} value={term.id}>{term.name}</option>\n                                else return <option value={term.id}>{term.name}</option>\n                            })}\n                        </select>\n                    </div>\n                    <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default BookEdit;"]},"metadata":{},"sourceType":"module"}