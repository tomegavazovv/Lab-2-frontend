{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tomegavazov/WebstormProjects/Lab-2-frontend/src/components/App/App.js\";\nimport React, { Component } from \"react\";\nimport Books from '../Books/BookList/books';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport Manufacturers from '../Manufacturers/manufacturers';\nimport ProductAdd from '../Books/BookAdd/bookAdd';\nimport Categories from '../Categories/categories';\nimport Header from '../Header/header';\nimport BookEdit from \"../Books/BookEdit/bookEdit\";\nimport EShopService from \"../../repository/eshopRepository\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadAuthors = () => {\n      EShopService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.loadBooks = () => {\n      EShopService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      EShopService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      EShopService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, authorId, availableCopies) => {\n      EShopService.addBook(name, category, authorId, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.getBook = id => {\n      EShopService.getBook(id).then(data => {\n        this.setState({\n          selectedBook: data.data\n        });\n      });\n    };\n\n    this.editBook = (id, name, category, authorId, availableCopies) => {\n      EShopService.editBook(id, name, category, authorId, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.takeBook = id => {\n      EShopService.takeBook(id).then(() => {\n        this.loadBooks();\n      }).catch(() => alert(\"We don't have available copies of the book at the moment.\"));\n    };\n\n    this.state = {\n      books: [],\n      authors: [],\n      selectedBook: {},\n      categories: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/authors\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Manufacturers, {\n              authors: this.state.authors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/categories\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Categories, {\n              categories: this.state.categories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(ProductAdd, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookEdit, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onEditBook: this.editBook,\n              book: this.state.selectedBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books,\n              onTake: this.takeBook,\n              onDelete: this.deleteBook,\n              onEdit: this.getBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/books\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.loadCategories();\n    this.loadAuthors();\n    this.loadBooks();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tomegavazov/WebstormProjects/Lab-2-frontend/src/components/App/App.js"],"names":["React","Component","Books","BrowserRouter","Router","Redirect","Route","Manufacturers","ProductAdd","Categories","Header","BookEdit","EShopService","App","constructor","props","loadAuthors","fetchAuthors","then","data","setState","authors","loadBooks","fetchBooks","books","loadCategories","fetchCategories","categories","deleteBook","id","addBook","name","category","authorId","availableCopies","getBook","selectedBook","editBook","takeBook","catch","alert","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport Books from '../Books/BookList/books';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom'\nimport Manufacturers from '../Manufacturers/manufacturers';\nimport ProductAdd from '../Books/BookAdd/bookAdd';\nimport Categories from '../Categories/categories';\nimport Header from '../Header/header';\nimport BookEdit from \"../Books/BookEdit/bookEdit\";\nimport EShopService from \"../../repository/eshopRepository\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            books: [],\n            authors: [],\n            selectedBook: {},\n            categories: []\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <Header/>\n                <main>\n                    <div className=\"container\">\n                        <Route path={\"/authors\"} exact render={() =>\n                            <Manufacturers authors={this.state.authors}/>}/>\n\n                        <Route path={\"/categories\"} exact render={() =>\n                            <Categories categories={this.state.categories}/>}/>\n\n                        <Route path={\"/books/add\"} exact render={() =>\n                            <ProductAdd categories={this.state.categories}\n                                        authors={this.state.authors}\n                                        onAddBook={this.addBook}/>}/>\n\n                        <Route path={\"/books/edit\"} exact render={() =>\n                            <BookEdit categories={this.state.categories}\n                                      authors={this.state.authors}\n                                      onEditBook={this.editBook}\n                                      book={this.state.selectedBook}/>}/>\n\n                        <Route path={\"/books\"} exact render={() =>\n                            <Books books={this.state.books}\n                                   onTake={this.takeBook}\n                                   onDelete={this.deleteBook}\n                                   onEdit={this.getBook}/>}/>\n\n                        <Redirect to={\"/books\"}/>\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n\n    componentDidMount() {\n        this.loadCategories();\n        this.loadAuthors();\n        this.loadBooks();\n    }\n\n    loadAuthors = () => {\n        EShopService.fetchAuthors()\n            .then((data) => {\n                this.setState({\n                    authors: data.data\n                })\n            });\n    }\n\n    loadBooks = () => {\n        EShopService.fetchBooks()\n            .then((data) => {\n                this.setState({\n                    books: data.data\n                })\n            });\n    }\n\n    loadCategories = () => {\n        EShopService.fetchCategories()\n            .then((data) => {\n                this.setState({\n                    categories: data.data\n                })\n            });\n    }\n\n    deleteBook = (id) => {\n        EShopService.deleteBook(id)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n\n    addBook = (name, category, authorId, availableCopies) => {\n        EShopService.addBook(name, category, authorId, availableCopies)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n\n    getBook = (id) => {\n        EShopService.getBook(id)\n            .then((data) => {\n                this.setState({\n                    selectedBook: data.data\n                })\n            })\n    }\n\n    editBook = (id, name, category, authorId, availableCopies) => {\n        EShopService.editBook(id, name, category, authorId, availableCopies)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n\n    takeBook = (id) => {\n        EShopService.takeBook(id)\n            .then(() => {\n                this.loadBooks();\n            })\n            .catch(() => alert(\"We don't have available copies of the book at the moment.\"))\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}